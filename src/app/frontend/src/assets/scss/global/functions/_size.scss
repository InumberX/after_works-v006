@use '../variables' as *;
@use 'sass:math';

@function get-clamp-px(
  $min-size,
  $max-size,
  $min-viewport: 360,
  $max-viewport: 1400
) {
  // 最大サイズから最小サイズを減算しサイズの変化する幅を求める
  $size-rate: $max-size - $min-size;

  // 最大viewportから最小viewportを減算しウィンドウの変化する幅を求めておく
  $viewport-rate: $max-viewport - $min-viewport;

  // サイズが変化する量をvw単位にする計算(小数点２桁で丸める)
  $changing-size: math.div(
    math.round(math.div($size-rate, $viewport-rate) * 10000),
    100
  );

  // サイズが変化しない部分を計算
  $fixed-size: math.round(
    ($min-size - math.div($size-rate, $viewport-rate) * $min-viewport)
  );

  // 出力
  @return clamp(
    #{$min-size}px,
    #{$fixed-size}px + #{$changing-size}vi,
    #{$max-size}px
  );
}

@function get-clamp-rem(
  $min-size,
  $max-size,
  $min-viewport: 360,
  $max-viewport: 1400
) {
  // 最大サイズから最小サイズを減算しサイズの変化する幅を求める
  $size-rate: $max-size - $min-size;

  // 最大viewportから最小viewportを減算しウィンドウの変化する幅を求めておく
  $viewport-rate: $max-viewport - $min-viewport;

  // サイズが変化する量をvw単位にする計算(小数点２桁で丸める)
  $changing-size: math.div(
    math.round(math.div($size-rate, $viewport-rate) * 10000),
    100
  );

  // サイズが変化しない部分をrem単位にする計算
  $fixed-size: math.div(
    math.round(
      ($min-size - math.div($size-rate, $viewport-rate) * $min-viewport) * 62.5
    ),
    1000
  );

  // 最小フォントサイズをrem単位にする計算（小数点3桁で丸める）
  $min-rem-size: math.div(math.round($min-size * 62.5), 1000);

  // 最大フォントサイズをrem単位にする計算（小数点３桁で丸める）
  $max-rem-size: math.div(math.round($max-size * 62.5), 1000);

  // 出力
  @return clamp(
    #{$min-rem-size}rem,
    #{$fixed-size}rem + #{$changing-size}vi,
    #{$max-rem-size}rem
  );
}
